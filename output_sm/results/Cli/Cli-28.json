{
    "Cli-28": {
        "1": {
            "prompt": "You are an expert Java developer. Below is a buggy method from a large Java project. This method causes one or more test failures.\nYour task is to fix the bug in this method. Use the provided test failure(s) to guide your reasoning.\n\n---\n\n## Buggy Method\n\n```java\n/**\n* Sets the values of Options using the values in <code>properties</code>.\n*\n* @param properties The value properties to be processed.\n*/\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n            }\n            else if (!(\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value)))\n            {\n                // if the value is not yes, true or 1 then don't add the\n                // option to the CommandLine\n                break;\n            }\n\n            cmd.addOption(opt);\n        }\n    }\n}\n```\n---\n\n## Failing Test Case(s)\n\n \n#Test method 1:\n```java\n    public void testPropertyOptionFlags() throws Exception\n\n    {\n\n        Properties properties = new Properties();\n\n        properties.setProperty( \"a\", \"true\" );\n\n        properties.setProperty( \"c\", \"yes\" );\n\n        properties.setProperty( \"e\", \"1\" );\n\n\n\n        Parser parser = new PosixParser();\n\n\n\n        CommandLine cmd = parser.parse(opts, null, properties);\n\n        assertTrue( cmd.hasOption(\"a\") );\n\n        assertTrue( cmd.hasOption(\"c\") );\n\n        assertTrue( cmd.hasOption(\"e\") );\n\n\n\n\n\n        properties = new Properties();\n\n        properties.setProperty( \"a\", \"false\" );\n\n        properties.setProperty( \"c\", \"no\" );\n\n        properties.setProperty( \"e\", \"0\" );\n\n\n\n        cmd = parser.parse(opts, null, properties);\n\n        assertTrue( !cmd.hasOption(\"a\") );\n\n        assertTrue( !cmd.hasOption(\"c\") );\n\n        assertTrue( cmd.hasOption(\"e\") ); // this option accepts as argument\n\n\n\n\n\n        properties = new Properties();\n\n        properties.setProperty( \"a\", \"TRUE\" );\n\n        properties.setProperty( \"c\", \"nO\" );\n\n        properties.setProperty( \"e\", \"TrUe\" );\n\n\n\n        cmd = parser.parse(opts, null, properties);\n\n        assertTrue( cmd.hasOption(\"a\") );\n\n        assertTrue( !cmd.hasOption(\"c\") );\n\n        assertTrue( cmd.hasOption(\"e\") );\n\n\n\n        \n\n        properties = new Properties();\n\n        properties.setProperty( \"a\", \"just a string\" );\n\n        properties.setProperty( \"e\", \"\" );\n\n\n\n        cmd = parser.parse(opts, null, properties);\n\n        assertTrue( !cmd.hasOption(\"a\") );\n\n        assertTrue( !cmd.hasOption(\"c\") );\n\n        assertTrue( cmd.hasOption(\"e\") );\n\n    } \n\n```\n#Error message: junit.framework.AssertionFailedError\n\tat org.apache.commons.cli.ValueTest.testPropertyOptionFlags(ValueTest.java:215)  assertTrue( cmd.hasOption(\"e\") ); // this option accepts as argument\n\n---\n\n## Your Goal\n\nFix the buggy method. Return only the fixed Java method. Do not include explanations or other text.\n",
            "patches": [
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the\n                // option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt); // Move this line inside the if block\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the\n                // option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                        cmd.addOption(opt);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                    cmd.addOption(opt);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ]
            ],
            "evaluation_done": true,
            "old_plausible_patches": [
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the\n                // option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt); // Move this line inside the if block\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the\n                // option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                        cmd.addOption(opt);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                    cmd.addOption(opt);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ]
            ],
            "plausible_patches": [
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                // if the value is yes, true or 1 then add the\n                // option to the CommandLine\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n                cmd.addOption(opt);\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                        cmd.addOption(opt);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                    }\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option))\n        {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg())\n            {\n                try\n                {\n                    opt.addValueForProcessing(value);\n                    cmd.addOption(opt);\n                }\n                catch (RuntimeException exp)\n                {\n                    // if we cannot add the value don't worry about it\n                }\n            }\n            else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n            {\n                cmd.addOption(opt);\n            }\n        }\n    }\n}\n"
                ]
            ]
        }
    }
}