{
    "Closure-52": {
        "1": {
            "prompt": "You are an expert Java developer. Below is a buggy method from a large Java project. This method causes one or more test failures.\nYour task is to fix the bug in this method. Use the provided test failure(s) to guide your reasoning.\n\n---\n\n## Buggy Method\n\n```java\n// ignored for our purposes.\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return len > 0;\n}\n```\n---\n\n## Failing Test Case(s)\n\n \n#Test method 1:\n```java\n  public void testNumericKeys() {\n\n    assertPrint(\"var x = {010: 1};\", \"var x={8:1}\");\n\n    assertPrint(\"var x = {'010': 1};\", \"var x={\\\"010\\\":1}\");\n\n\n\n    assertPrint(\"var x = {0x10: 1};\", \"var x={16:1}\");\n\n    assertPrint(\"var x = {'0x10': 1};\", \"var x={\\\"0x10\\\":1}\");\n\n\n\n    // I was surprised at this result too.\n\n    assertPrint(\"var x = {.2: 1};\", \"var x={\\\"0.2\\\":1}\");\n\n    assertPrint(\"var x = {'.2': 1};\", \"var x={\\\".2\\\":1}\");\n\n\n\n    assertPrint(\"var x = {0.2: 1};\", \"var x={\\\"0.2\\\":1}\");\n\n    assertPrint(\"var x = {'0.2': 1};\", \"var x={\\\"0.2\\\":1}\");\n\n  }\n\n```\n#Error message: junit.framework.ComparisonFailure: expected:<var x={[\"010\"]:1}> but was:<var x={[10]:1}>\n\tat com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:389)  assertEquals(expected,        parsePrint(js, false, CodePrinter.DEFAULT_LINE_LENGTH_THRESHOLD));\n\tat com.google.javascript.jscomp.CodePrinterTest.testNumericKeys(CodePrinterTest.java:1259)  assertPrint(\"var x = {'010': 1};\", \"var x={\\\"010\\\":1}\");\n\n---\n\n## Your Goal\n\nFix the buggy method. Return only the fixed Java method. Do not include explanations or other text.\n",
            "patches": [
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if ((c < '0' || c > '9') && c != '.') {\n      return false;\n    }\n  }\n  return len > 0;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0) return false;\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if ((c < '0' || c > '9') && !(index == 0 && c == '0')) {\n      return false;\n    }\n  }\n  return len > 1 || s.charAt(0) != '0';\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0 || (len > 1 && s.charAt(0) == '0')) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  if (s.isEmpty()) return false;\n  int len = s.length();\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if ((c < '0' || c > '9') && !(index == 0 && c == '.')) {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0 || (len > 1 && s.charAt(0) == '0')) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0) return false;\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (!Character.isDigit(c)) {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ]
            ],
            "evaluation_done": true,
            "old_plausible_patches": [
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0 || (len > 1 && s.charAt(0) == '0')) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ],
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0 || (len > 1 && s.charAt(0) == '0')) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ]
            ],
            "compiler_error_or_timeout": true,
            "plausible_patches": [
                [
                    "\nstatic boolean isSimpleNumber(String s) {\n  int len = s.length();\n  if (len == 0 || (len > 1 && s.charAt(0) == '0')) {\n    return false;\n  }\n  for (int index = 0; index < len; index++) {\n    char c = s.charAt(index);\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n"
                ]
            ]
        }
    }
}