{
    "Math-27": {
        "1": {
            "prompt": "You are an expert Java developer. Below is a buggy method from a large Java project. This method causes one or more test failures.\nYour task is to fix the bug in this method. Use the provided test failure(s) to guide your reasoning.\n\n---\n\n## Buggy Method\n\n```java\n/**\n* <p>\n* Gets the fraction percentage as a <tt>double</tt>. This calculates the\n* fraction as the numerator divided by denominator multiplied by 100.\n* </p>\n*\n* @return the fraction percentage as a <tt>double</tt>.\n*/\npublic double percentageValue() {\n    return multiply(100).doubleValue();\n}\n```\n---\n\n## Failing Test Case(s)\n\n \n#Test method 1:\n```java\n    public void testMath835() {\n\n        final int numer = Integer.MAX_VALUE / 99;\n\n        final int denom = 1;\n\n        final double percentage = 100 * ((double) numer) / denom;\n\n        final Fraction frac = new Fraction(numer, denom);\n\n        // With the implementation that preceded the fix suggested in MATH-835,\n\n        // this test was failing, due to overflow.\n\n        Assert.assertEquals(percentage, frac.percentageValue(), Math.ulp(percentage));\n\n    }\n\n```\n#Error message: junit.framework.AssertionFailedError: expected:<2.1691754E9> but was:<-2.125791896E9>\n\tat org.apache.commons.math3.fraction.FractionTest.testMath835(FractionTest.java:253)  Assert.assertEquals(percentage, frac.percentageValue(), Math.ulp(percentage));\n\n---\n\n## Your Goal\n\nFix the buggy method. Return only the fixed Java method. Do not include explanations or other text.\n",
            "patches": [
                [
                    "\npublic double percentageValue() {\n    return ((double) this.numerator / this.denominator) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) this.numerator / this.denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) this.numerator / this.denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return ((double) numerator / denominator) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (100.0 * this.numerator) / this.denominator;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return ((double) getNumerator() / getDenominator()) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) numerator / denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return ((double) numerator / denominator) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) this.numerator / this.denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) numerator / denominator * 100;\n}\n"
                ]
            ],
            "evaluation_done": true,
            "old_plausible_patches": [
                [
                    "\npublic double percentageValue() {\n    return ((double) this.numerator / this.denominator) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) this.numerator / this.denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) this.numerator / this.denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return ((double) numerator / denominator) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (100.0 * this.numerator) / this.denominator;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return ((double) getNumerator() / getDenominator()) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) numerator / denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return ((double) numerator / denominator) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) this.numerator / this.denominator * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) numerator / denominator * 100;\n}\n"
                ]
            ],
            "plausible_patches": [
                [
                    "\npublic double percentageValue() {\n    return ((double) getNumerator() / getDenominator()) * 100;\n}\n"
                ],
                [
                    "\npublic double percentageValue() {\n    return (double) numerator / denominator * 100;\n}\n"
                ]
            ]
        }
    }
}