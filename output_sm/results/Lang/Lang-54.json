{
    "Lang-54": {
        "1": {
            "prompt": "You are an expert Java developer. Below is a buggy method from a large Java project. This method causes one or more test failures.\nYour task is to fix the bug in this method. Use the provided test failure(s) to guide your reasoning.\n\n---\n\n## Buggy Method\n\n```java\n/**\n* <p>Converts a String to a Locale.</p>\n*\n* <p>This method takes the string format of a locale and creates the\n* locale object from it.</p>\n*\n* <pre>\n*   LocaleUtils.toLocale(\"en\")         = new Locale(\"en\", \"\")\n*   LocaleUtils.toLocale(\"en_GB\")      = new Locale(\"en\", \"GB\")\n*   LocaleUtils.toLocale(\"en_GB_xxx\")  = new Locale(\"en\", \"GB\", \"xxx\")   (#)\n* </pre>\n*\n* <p>(#) The behaviour of the JDK variant constructor changed between JDK1.3 and JDK1.4.\n* In JDK1.3, the constructor upper cases the variant, in JDK1.4, it doesn't.\n* Thus, the result from getVariant() may vary depending on your JDK.</p>\n*\n* <p>This method validates the input strictly.\n* The language code must be lowercase.\n* The country code must be uppercase.\n* The separator must be an underscore.\n* The length must be correct.\n* </p>\n*\n* @param str  the locale String to convert, null returns null\n* @return a Locale, null if null input\n* @throws IllegalArgumentException if the string is an invalid format\n*/\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}\n```\n---\n\n## Failing Test Case(s)\n\n \n#Test method 1:\n```java\n    public void testLang328() {\n\n        assertValidToLocale(\"fr__POSIX\", \"fr\", \"\", \"POSIX\");\n\n    }\n\n```\n#Error message: java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX\n\tat org.apache.commons.lang.LocaleUtils.toLocale(LocaleUtils.java:116)  throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n\tat org.apache.commons.lang.LocaleUtilsTest.assertValidToLocale(LocaleUtilsTest.java:140)  Locale locale = LocaleUtils.toLocale(localeString);\n\tat org.apache.commons.lang.LocaleUtilsTest.testLang328(LocaleUtilsTest.java:505)  assertValidToLocale(\"fr__POSIX\", \"fr\", \"\", \"POSIX\");\n\n---\n\n## Your Goal\n\nFix the buggy method. Return only the fixed Java method. Do not include explanations or other text.\n",
            "patches": [
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        if (len == 5 || len > 5 && str.charAt(5) != '_') {\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        } else {\n            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n        }\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int underscoreCount = 0;\n        for (int i = 2; i < len; i++) {\n            if (str.charAt(i) == '_') {\n                underscoreCount++;\n            }\n        }\n        if (underscoreCount == 1) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else if (underscoreCount == 2) {\n            char ch3 = str.charAt(3);\n            if (ch3 == '_') {\n                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n            }\n            char ch4 = str.charAt(4);\n            if (ch4 == '_') {\n                return new Locale(str.substring(0, 2), \"\", str.substring(5));\n            }\n            char ch5 = str.charAt(5);\n            if (ch5 != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch6 = str.charAt(6);\n            if (ch6 < 'A' || ch6 > 'Z') {\n                return new Locale(str.substring(0, 2), \"\", str.substring(6));\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Handle cases with country, variant or just variant\n        int startVariantIndex = str.indexOf('_', 3);\n        if (startVariantIndex == -1) {\n            startVariantIndex = len;\n        }\n        if (startVariantIndex == 3) {\n            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n        } else {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (startVariantIndex == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int underscoreCount = 0;\n        for (int i = 0; i < len; i++) {\n            if (str.charAt(i) == '_') {\n                underscoreCount++;\n            }\n        }\n        if (underscoreCount == 1) {\n            if (len != 5) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else if (underscoreCount == 2) {\n            if (len < 6) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 != '_' && (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z')) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), \"\", str.substring(6));\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        if (len == 4 || str.charAt(4) != '_') {\n            if (ch3 < 'A' || ch3 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            }\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n        return new Locale(str.substring(0, 2), len > 4 ? str.substring(3, 5) : \"\", len > 6 ? str.substring(6) : \"\");\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int underscoreCount = 0;\n        for (int i = 3; i < len; i++) {\n            if (str.charAt(i) == '_') {\n                underscoreCount++;\n            }\n        }\n        if (underscoreCount > 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String language = str.substring(0, 2);\n        String country = \"\";\n        String variant = \"\";\n        int firstUnderscore = str.indexOf('_', 3);\n        int secondUnderscore = str.indexOf('_', firstUnderscore + 1);\n        if (firstUnderscore == -1) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (underscoreCount == 1) {\n            country = str.substring(3);\n        } else if (underscoreCount == 2) {\n            country = str.substring(3, firstUnderscore);\n            variant = str.substring(secondUnderscore + 1);\n        }\n        if (country.length() == 2) {\n            char ch3 = country.charAt(0);\n            char ch4 = country.charAt(1);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (!country.isEmpty()) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country, variant);\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2 || len == 3 || len == 4) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            int underscoreCount = 0;\n            for (int i = 2; i < len; i++) {\n                if (str.charAt(i) == '_') {\n                    underscoreCount++;\n                }\n            }\n            if (underscoreCount != 2) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n        }\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int underscoreCount = 0;\n        for (int i = 0; i < len; i++) {\n            if (str.charAt(i) == '_') {\n                underscoreCount++;\n            }\n        }\n        if (underscoreCount > 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int countryStart = 3;\n        int countryEnd = str.indexOf('_', countryStart);\n        if (countryEnd == -1) {\n            countryEnd = len;\n        }\n        String language = str.substring(0, 2);\n        String country = \"\";\n        String variant = \"\";\n        if (countryStart < countryEnd) {\n            country = str.substring(countryStart, countryEnd);\n        }\n        if (countryEnd < len - 1) {\n            variant = str.substring(countryEnd + 1);\n        }\n        if (!country.isEmpty() && (country.length() != 2 || country.chars().anyMatch(c -> c < 'A' || c > 'Z'))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country, variant);\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int countryEnd = str.indexOf('_', 3);\n        if (countryEnd == -1) {\n            countryEnd = len;\n        }\n        String language = str.substring(0, 2);\n        String country = \"\";\n        if (countryEnd == 5) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            country = str.substring(3, 5);\n        }\n        String variant = countryEnd < len ? str.substring(countryEnd + 1) : \"\";\n        return new Locale(language, country, variant);\n    }\n}\n"
                ],
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len >= 5) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 == '_' || ch4 == '_') {\n                if (len == 5 || (len == 6 && str.charAt(5) != '_')) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n            } else if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n"
                ]
            ],
            "evaluation_done": true,
            "old_plausible_patches": [
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len >= 5) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 == '_' || ch4 == '_') {\n                if (len == 5 || (len == 6 && str.charAt(5) != '_')) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n            } else if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n"
                ]
            ],
            "plausible_patches": [
                [
                    "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len >= 5) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 == '_' || ch4 == '_') {\n                if (len == 5 || (len == 6 && str.charAt(5) != '_')) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n            } else if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n"
                ]
            ]
        }
    }
}